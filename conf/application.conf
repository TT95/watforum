# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.


# The application languages
# ~~~~~
play.i18n.langs = [ "en", "pl" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver

### VARIABLES
db.default.url=${?SWT_DATABASE_URL}
baseUrl=${?SWT_BASE_URL}
play.crypto.secret = ${?SWT_SECRET}
play.evolutions.enabled=${?SWT_EVOLUTION_ENABLED}
recaptcha = ${?SWT_RECAPTCHA}
googleAPIkey=${?SWT_GOOGLE_API}
fbAppID=${?SWT_FB_APP_ID}
fbAppSecret=${?SWT_FB_APP_SECRET}

play.mailer {
  host = "smtp.yandex.com"
  port = 465
  user = "watpointer@yandex.com"
  password = ${?SWT_EMAIL_PASS}
  tls = no
  ssl = yes
  debug = yes
  timeout= 60000
  connectiontimeout = 60000
  mock = false
}

### HEROKU STAGING
#baseUrl="https://calm-caverns-80526.herokuapp.com"
#db.default.url="postgres://apfdpqdwfriehg:7d70c31c153ce93d5ea6daeb8135326b6ed16070f86511e21d9d3c9245b9b10c@ec2-23-21-235-142.compute-1.amazonaws.com:5432/dd7g0eq62isd00"


ebean.default = ["models.*"]

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false


#play.http.errorHandler= security.CustomErrorHandler
play {
  modules {
    enabled += modules.SecurityModule
    enabled += modules.ConfigModule
  }
}

